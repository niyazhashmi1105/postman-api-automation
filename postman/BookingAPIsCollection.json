{
	"info": {
		"_postman_id": "6936a55e-7106-4a3b-8be0-7091dfc9f7cd",
		"name": "Booking APIs Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25649969"
	},
	"item": [
		{
			"name": "Create Auth Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Auth Validation Response Code\", function(){",
							"",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains token\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"token\");",
							"});",
							"",
							"pm.test(\"Setting token as an Collection Variable\", function(){",
							"",
							"    var jsonData = pm. response.json();",
							"    pm.environment.set(\"token\",jsonData.token);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"admin\",\n    \"password\" : \"password123\"\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Importing the schema",
							"const schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"bookingid\": { \"type\": \"integer\" },",
							"        \"booking\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"firstname\": { \"type\": \"string\" },",
							"                \"lastname\": { \"type\": \"string\" },",
							"                \"totalprice\": { \"type\": \"integer\" },",
							"                \"depositpaid\": { \"type\": \"boolean\" },",
							"                \"bookingdates\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"checkin\": { \"type\": \"string\", \"format\": \"date\" },",
							"                        \"checkout\": { \"type\": \"string\", \"format\": \"date\" }",
							"                    },",
							"                    \"required\": [\"checkin\", \"checkout\"]",
							"                },",
							"                \"additionalneeds\": { \"type\": \"string\" }",
							"            },",
							"            \"required\": [\"firstname\", \"lastname\", \"totalprice\", \"depositpaid\", \"bookingdates\"]",
							"        }",
							"    },",
							"    \"required\": [\"bookingid\", \"booking\"]",
							"};",
							"",
							"// Parse the response body to JSON",
							"let jsonData = pm.response.json();",
							"",
							"// Validate the JSON schema",
							"const Ajv = require('ajv');",
							"const ajv = new Ajv();",
							"pm.test(\"Validate response schema\", function () {",
							"    pm.expect(ajv.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Create Booking Response Validation\", function(){",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Retrieve Booking Id and pass to other tests\", function(){",
							"     jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"bookingId\", jsonData.bookingid);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "Bearer {{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\": \"Jim\",\n    \"lastname\": \"Brown\",\n    \"totalprice\": 111,\n    \"depositpaid\": true,\n    \"bookingdates\": {\n        \"checkin\": \"2013-02-23\",\n        \"checkout\": \"2014-10-23\"\n    },\n    \"additionalneeds\": \"Breakfast\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBookingById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Validate Get Booking By Id Status Code\", function(){",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate Get Booking By Id Response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"firstname\");",
							"    pm.expect(jsonData).to.have.property(\"lastname\");",
							"    pm.expect(jsonData.totalprice).to.eql(111);",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql(\"2013-02-23\");",
							"    pm.expect(jsonData.bookingdates.checkout).to.eql(\"2014-10-23\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "Bearer {{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/{{bookingId}}",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAllBookings",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate Get All Bookings Status\", function(){",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Validate Get All Bookings booking Id fetch from Collections\", function(){",
							"    let bookingIdVar = pm.collectionVariables.get(\"bookingId\");",
							"    let jsonData = pm.response.json();",
							"     for (const bookingidJson of jsonData ){",
							"        if(bookingIdVar == bookingidJson.bookingid){",
							"            pm.expect(bookingIdVar).to.eql(bookingidJson.bookingid)",
							"            break;",
							"        }",
							"     }",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "Bearer {{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/booking",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put-UpdateBookingById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate Update Booking By Id Status Code\", function(){",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate Get Booking By Id Response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"firstname\");",
							"    pm.expect(jsonData.firstname).to.eql(\"Niyaz\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token=6fc35cd463502b3",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\": \"Niyaz\",\n    \"lastname\": \"Brown\",\n    \"totalprice\": 111,\n    \"depositpaid\": true,\n    \"bookingdates\": {\n        \"checkin\": \"2018-01-01\",\n        \"checkout\": \"2019-01-01\"\n    },\n    \"additionalneeds\": \"Breakfast\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/{{bookingId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch-UpdateBookingById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate Update Booking By Id Status Code\", function(){",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate Get Booking By Id Response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"lastname\");",
							"    pm.expect(jsonData.lastname).to.eql(\"Hashmi\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\": \"Niyaz\",\n    \"lastname\": \"Hashmi\"\n    \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/{{bookingId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete BookingById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate Delete Booking By Id Status Code\", function(){",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Cookie",
						"value": "token ={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/booking/{{bookingId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "bookingId",
			"value": ""
		}
	]
}